version: '3'
services:
    proxy:
        image: traefik
        networks:
            - cfm
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik.toml:/etc/traefik/traefik.toml
            - ./certs/:/certs/
    mongo:
        container_name: mongo
        image: mongo
        ports:
            - '27017:27017'
        networks:
            - cfm
    mongo-seed-user:
        image: mongo
        links:
            - mongo
        depends_on:
            - mongo
        volumes:
            - ./mongo-seed:/mongo-seed
        networks:
            - cfm
        command:
            "mongoimport --host mongo --port 27017 --db careforme --mode upsert --type json --file /mongo-seed/user.json --jsonArray"
    mongo-seed-campaign:
        image: mongo
        links:
            - mongo
        depends_on:
            - mongo
        volumes:
            - ./mongo-seed:/mongo-seed
        networks:
            - cfm
        command:
            "mongoimport --host mongo --port 27017 --db careforme --mode upsert --type json --file /mongo-seed/campaign.json --jsonArray"
    mongo-seed-update:
        image: mongo
        links:
            - mongo
        depends_on:
            - mongo
        volumes:
            - ./mongo-seed:/mongo-seed
        networks:
            - cfm
        command:
            "mongoimport --host mongo --port 27017 --db careforme --mode upsert --type json --file /mongo-seed/update.json --jsonArray"
    mongo-seed-donation:
        image: mongo
        links:
            - mongo
        depends_on:
            - mongo
        volumes:
            - ./mongo-seed:/mongo-seed
        networks:
            - cfm
        command:
            "mongoimport --host mongo --port 27017 --db careforme --mode upsert --type json --file /mongo-seed/donation.json --jsonArray"
    redis:
        image: redis
        networks:
            - cfm
    cfm_server:
        container_name: cfm-server
        restart: always
        build: ./server/
        volumes:
            - ./server/:/server
            - /server/node_modules
        links:
            - mongo
        depends_on:
            - mongo
        networks:
            - cfm
        labels:
            traefik.frontend.rule: 'PathPrefix: /api/'
    cfm_client:
        container_name: cfm-client
        restart: always
        build: ./client/
        volumes:
            - ./client:/client
            - /client/node_modules
        links:
            - cfm_server
        depends_on:
            - cfm_server
        networks:
            - cfm
        labels:
            traefik.frontend.rule: 'PathPrefix: /'

networks:
    cfm:
        driver: bridge
